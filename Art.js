// Wplace Pixel Analyzer Tool v2.0 - ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Tile-based Coordinate System
// ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ: Copy code ‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß paste ‡πÉ‡∏ô browser console ‡∏Ç‡∏ì‡∏∞‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ Wplace.live

class WplacePixelAnalyzer {
    constructor() {
        this.canvas = null;
        this.ctx = null;
        this.imageData = null;
        this.pixelColors = [];
        this.TILE_SIZE = 256; // Wplace tile size (‡∏õ‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å)
        this.lastPosition = null; // ‡πÄ‡∏Å‡πá‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö back function
        
        // ‡πÄ‡∏Å‡πá‡∏ö reference ‡πÉ‡∏ô global variable
        window._currentAnalyzer = this;
        
        this.createUI();
    }

    createUI() {
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á UI overlay
        const overlay = document.createElement('div');
        overlay.id = 'wplace-analyzer';
        overlay.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            width: 400px;
            background: rgba(0, 0, 0, 0.95);
            color: white;
            padding: 20px;
            border-radius: 15px;
            z-index: 10000;
            font-family: 'Consolas', 'Monaco', 'Courier New', monospace;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.7);
            backdrop-filter: blur(15px);
            border: 1px solid rgba(255, 255, 255, 0.1);
        `;

        overlay.innerHTML = `
            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 15px;">
                <h3 style="margin: 0; color: #00ff88; font-size: 16px;">üé® Wplace Analyzer v2.0</h3>
                <button id="close-analyzer" style="background: #ff4444; border: none; color: white; padding: 8px 12px; border-radius: 8px; cursor: pointer; font-size: 14px;">‚úï</button>
            </div>
            
            <div style="margin-bottom: 15px;">
                <label style="display: block; margin-bottom: 5px; color: #ccc; font-size: 12px;">üìÅ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û:</label>
                <input type="file" id="image-upload" accept="image/*" style="width: 100%; padding: 8px; border-radius: 8px; border: 1px solid #555; background: #222; color: white; font-size: 12px;">
            </div>
            
            <div style="background: #111; padding: 12px; border-radius: 8px; margin-bottom: 15px;">
                <div style="margin-bottom: 10px; color: #00ff88; font-weight: bold; font-size: 13px;">üéØ ‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏¥‡∏Å‡∏±‡∏î Wplace</div>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 8px; margin-bottom: 10px;">
                    <div>
                        <label style="font-size: 11px; color: #aaa;">Global X:</label>
                        <input type="number" id="global-x" placeholder="787" style="width: 100%; padding: 6px; border-radius: 5px; border: 1px solid #444; background: #222; color: white; font-size: 12px;">
                    </div>
                    <div>
                        <label style="font-size: 11px; color: #aaa;">Global Y:</label>
                        <input type="number" id="global-y" placeholder="3730" style="width: 100%; padding: 6px; border-radius: 5px; border: 1px solid #444; background: #222; color: white; font-size: 12px;">
                    </div>
                </div>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 8px; margin-bottom: 10px;">
                    <div>
                        <label style="font-size: 11px; color: #aaa;">Tile X:</label>
                        <input type="number" id="tile-x" readonly style="width: 100%; padding: 6px; border-radius: 5px; border: 1px solid #444; background: #333; color: #888; font-size: 12px;">
                    </div>
                    <div>
                        <label style="font-size: 11px; color: #aaa;">Tile Y:</label>
                        <input type="number" id="tile-y" readonly style="width: 100%; padding: 6px; border-radius: 5px; border: 1px solid #444; background: #333; color: #888; font-size: 12px;">
                    </div>
                </div>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 8px; margin-bottom: 10px;">
                    <div>
                        <label style="font-size: 11px; color: #aaa;">Pixel X in Tile:</label>
                        <input type="number" id="pixel-x" readonly style="width: 100%; padding: 6px; border-radius: 5px; border: 1px solid #444; background: #333; color: #888; font-size: 12px;">
                    </div>
                    <div>
                        <label style="font-size: 11px; color: #aaa;">Pixel Y in Tile:</label>
                        <input type="number" id="pixel-y" readonly style="width: 100%; padding: 6px; border-radius: 5px; border: 1px solid #444; background: #333; color: #888; font-size: 12px;">
                    </div>
                </div>
                
                <button id="check-pixel" style="width: 100%; padding: 10px; background: linear-gradient(45deg, #0066ff, #00ccff); color: white; border: none; border-radius: 8px; cursor: pointer; margin-top: 5px; font-weight: bold;">üîç ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏û‡∏¥‡∏Å‡πÄ‡∏ã‡∏•</button>
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 5px; margin-top: 5px;">
                    <button id="get-current-coords" style="padding: 8px; background: #333; color: white; border: none; border-radius: 6px; cursor: pointer; font-size: 11px;">üìç ‡∏î‡∏∂‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î</button>
                    <button id="goto-coords" style="padding: 8px; background: linear-gradient(45deg, #ff6b00, #ff8c00); color: white; border: none; border-radius: 6px; cursor: pointer; font-size: 11px; font-weight: bold;">üöÄ Goto</button>
                </div>
            </div>
            
            <div id="pixel-info" style="background: #0a0a0a; padding: 12px; border-radius: 8px; margin-bottom: 10px; min-height: 80px; border: 1px solid #333;">
                <div style="color: #666; font-size: 11px; text-align: center; padding: 20px 0;">
                    üé® ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÅ‡∏•‡∏∞‡∏£‡∏∞‡∏ö‡∏∏‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå
                </div>
            </div>
            
            <div id="color-preview" style="width: 100%; height: 40px; border-radius: 8px; border: 2px solid #333; margin-bottom: 10px; background: linear-gradient(45deg, #333 25%, transparent 25%), linear-gradient(-45deg, #333 25%, transparent 25%), linear-gradient(45deg, transparent 75%, #333 75%), linear-gradient(-45deg, transparent 75%, #333 75%); background-size: 8px 8px; background-position: 0 0, 0 4px, 4px -4px, -4px 0px; display: flex; align-items: center; justify-content: center; color: #666; font-size: 11px;"></div>
            
            <div style="font-size: 10px; color: #555; text-align: center; line-height: 1.4;">
                üí° ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏™‡∏µ‡πÅ‡∏•‡∏∞‡∏û‡∏¥‡∏Å‡∏±‡∏î Wplace<br>
                üîß ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Tile-based Coordinate System
            </div>
        `;

        document.body.appendChild(overlay);
        this.setupEventListeners();
    }

    setupEventListeners() {
        // ‡∏õ‡∏¥‡∏î overlay
        document.getElementById('close-analyzer').onclick = () => {
            document.getElementById('wplace-analyzer').remove();
        };

        // ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ
        document.getElementById('image-upload').onchange = (e) => {
            const file = e.target.files[0];
            if (file) {
                this.loadImage(file);
            }
        };

        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏û‡∏¥‡∏Å‡∏±‡∏î tile ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô global coordinates
        document.getElementById('global-x').oninput = () => this.updateTileCoordinates();
        document.getElementById('global-y').oninput = () => this.updateTileCoordinates();

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏û‡∏¥‡∏Å‡πÄ‡∏ã‡∏•
        document.getElementById('check-pixel').onclick = () => {
            const globalX = parseInt(document.getElementById('global-x').value);
            const globalY = parseInt(document.getElementById('global-y').value);
            
            if (!isNaN(globalX) && !isNaN(globalY)) {
                this.checkPixelAt(globalX, globalY);
            } else {
                this.showPixelInfo('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏û‡∏¥‡∏Å‡∏±‡∏î Global X ‡πÅ‡∏•‡∏∞ Y ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
            }
        };

        // ‡∏î‡∏∂‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏à‡∏≤‡∏Å Wplace
        document.getElementById('get-current-coords').onclick = () => {
            this.getCurrentWplaceCoordinates();
        };

        // Goto ‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏
        document.getElementById('goto-coords').onclick = () => {
            const globalX = parseInt(document.getElementById('global-x').value);
            const globalY = parseInt(document.getElementById('global-y').value);
            
            if (!isNaN(globalX) && !isNaN(globalY)) {
                this.gotoCoordinates(globalX, globalY);
            } else {
                this.showPixelInfo('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏û‡∏¥‡∏Å‡∏±‡∏î Global X ‡πÅ‡∏•‡∏∞ Y ‡∏Å‡πà‡∏≠‡∏ô Goto');
            }
        };
    }

    updateTileCoordinates() {
        const globalX = parseInt(document.getElementById('global-x').value);
        const globalY = parseInt(document.getElementById('global-y').value);
        
        if (!isNaN(globalX) && !isNaN(globalY)) {
            const tileX = Math.floor(globalX / this.TILE_SIZE);
            const tileY = Math.floor(globalY / this.TILE_SIZE);
            const pixelX = globalX % this.TILE_SIZE;
            const pixelY = globalY % this.TILE_SIZE;
            
            document.getElementById('tile-x').value = tileX;
            document.getElementById('tile-y').value = tileY;
            document.getElementById('pixel-x').value = pixelX;
            document.getElementById('pixel-y').value = pixelY;
        }
    }

    gotoCoordinates(globalX, globalY) {
        try {
            // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡πÉ‡∏ä‡πâ URL hash navigation
            const newHash = `#${globalX},${globalY}`;
            
            // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
            const currentHash = window.location.hash;
            if (currentHash && currentHash !== newHash) {
                this.lastPosition = currentHash;
            }
            
            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï URL hash
            window.location.hash = newHash;
            
            // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á (backup method)
            setTimeout(() => {
                // ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏´‡∏≤ canvas ‡∏´‡∏£‡∏∑‡∏≠ map element ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ pan
                const canvas = document.querySelector('canvas');
                const mapContainer = document.querySelector('[class*="map"], [id*="map"], [class*="canvas"], [id*="canvas"]');
                
                if (canvas) {
                    // ‡∏™‡∏£‡πâ‡∏≤‡∏á click event ‡∏ó‡∏µ‡πà‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á canvas
                    const rect = canvas.getBoundingClientRect();
                    const centerX = rect.left + rect.width / 2;
                    const centerY = rect.top + rect.height / 2;
                    
                    const clickEvent = new MouseEvent('click', {
                        bubbles: true,
                        cancelable: true,
                        clientX: centerX,
                        clientY: centerY
                    });
                    
                    canvas.dispatchEvent(clickEvent);
                }
                
                // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 3: ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏° trigger ‡∏Å‡∏≤‡∏£ refresh ‡∏´‡∏£‡∏∑‡∏≠ reload tiles
                if (typeof window.game !== 'undefined' && window.game.camera) {
                    // ‡∏´‡∏≤‡∏Å‡∏°‡∏µ game object (‡∏ö‡∏≤‡∏á‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡∏°‡∏µ)
                    if (typeof window.game.camera.setPosition === 'function') {
                        window.game.camera.setPosition(globalX, globalY);
                    }
                } else {
                    // ‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏´‡∏•‡∏î‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏´‡∏°‡πà
                    window.dispatchEvent(new Event('hashchange'));
                }
                
            }, 100);
            
            // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
            const tileX = Math.floor(globalX / this.TILE_SIZE);
            const tileY = Math.floor(globalY / this.TILE_SIZE);
            const pixelX = globalX % this.TILE_SIZE;
            const pixelY = globalY % this.TILE_SIZE;
            
            this.showPixelInfo(`üöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á Goto ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î...
‚îå‚îÄ Global: (${globalX}, ${globalY})
‚îú‚îÄ Tile: (${tileX}, ${tileY})  
‚îî‚îÄ Pixel in Tile: (${pixelX}, ${pixelY})

üìç URL Updated: ${newHash}
‚è≥ ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡πá‡∏ö‡πÇ‡∏´‡∏•‡∏î‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏´‡∏°‡πà...

üí° ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ú‡∏• ‡∏•‡∏≠‡∏á‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö`);
            
            // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î
            setTimeout(() => {
                this.showPixelInfo(`‚úÖ Goto ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!
üìç ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: (${globalX}, ${globalY})
üî≤ Tile: (${tileX}, ${tileY})
üéØ Pixel: (${pixelX}, ${pixelY})

${this.lastPosition ? `üîÑ ‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏î‡∏¥‡∏°: wplace.back()` : ''}
üñ±Ô∏è ‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏á pixel!`);
            }, 2000);
            
        } catch (error) {
            this.showPixelInfo(`‚ùå Goto ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: ${error.message}
üí° ‡∏•‡∏≠‡∏á:
1. ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
2. ‡πÉ‡∏ä‡πâ wplace.goto(${globalX}, ${globalY}) ‡πÉ‡∏ô console
3. Copy URL ‡πÑ‡∏õ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ô tab ‡πÉ‡∏´‡∏°‡πà: ${window.location.origin}#${globalX},${globalY}`);
        }
    }

    getCurrentWplaceCoordinates() {
        // ‡∏û‡∏¢‡∏≤‡∏¢‡∏≤‡∏°‡∏î‡∏∂‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏à‡∏≤‡∏Å Wplace DOM ‡∏´‡∏£‡∏∑‡∏≠ URL
        try {
            // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö URL hash
            const hash = window.location.hash;
            const match = hash.match(/#([+-]?\d+),([+-]?\d+)(?:,(\d+))?/);
            
            if (match) {
                const x = parseInt(match[1]);
                const y = parseInt(match[2]);
                
                document.getElementById('global-x').value = x;
                document.getElementById('global-y').value = y;
                this.updateTileCoordinates();
                
                this.showPixelInfo(`‚úÖ ‡∏î‡∏∂‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏à‡∏≤‡∏Å URL ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!
üìç Global: (${x}, ${y})`);
                return;
            }
            
            // ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡∏´‡∏≤‡∏à‡∏≤‡∏Å DOM elements
            const pixelInfo = document.querySelector('[class*="pixel"], [id*="pixel"], [class*="coord"], [id*="coord"]');
            if (pixelInfo && pixelInfo.textContent) {
                const coordMatch = pixelInfo.textContent.match(/(\d+),\s*(\d+)/);
                if (coordMatch) {
                    const x = parseInt(coordMatch[1]);
                    const y = parseInt(coordMatch[2]);
                    
                    document.getElementById('global-x').value = x;
                    document.getElementById('global-y').value = y;
                    this.updateTileCoordinates();
                    
                    this.showPixelInfo(`‚úÖ ‡∏î‡∏∂‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏à‡∏≤‡∏Å DOM ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!
üìç Global: (${x}, ${y})`);
                    return;
                }
            }
            
            this.showPixelInfo(`‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÑ‡∏î‡πâ
üí° ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á`);
            
        } catch (error) {
            this.showPixelInfo(`‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ${error.message}`);
        }
    }

    loadImage(file) {
        const reader = new FileReader();
        reader.onload = (e) => {
            const img = new Image();
            img.onload = () => {
                this.processImage(img);
            };
            img.src = e.target.result;
        };
        reader.readAsDataURL(file);
    }

    processImage(img) {
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á canvas ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå
        this.canvas = document.createElement('canvas');
        this.ctx = this.canvas.getContext('2d');
        
        this.canvas.width = img.width;
        this.canvas.height = img.height;
        
        // ‡∏ß‡∏≤‡∏î‡∏£‡∏π‡∏õ‡∏•‡∏á canvas
        this.ctx.drawImage(img, 0, 0);
        
        // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• pixel
        this.imageData = this.ctx.getImageData(0, 0, img.width, img.height);
        
        // ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏™‡∏µ
        this.analyzeColors();
        
        this.showPixelInfo(`‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!
üìè ‡∏Ç‡∏ô‡∏≤‡∏î: ${img.width} √ó ${img.height} px
üé® ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏µ‡∏´‡∏•‡∏±‡∏Å: ${this.pixelColors.length}
üîç ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏û‡∏¥‡∏Å‡πÄ‡∏ã‡∏•‡πÅ‡∏•‡πâ‡∏ß!`);
    }

    analyzeColors() {
        const data = this.imageData.data;
        const colorMap = new Map();
        
        // ‡∏ô‡∏±‡∏ö‡∏™‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        for (let i = 0; i < data.length; i += 4) {
            const r = data[i];
            const g = data[i + 1];
            const b = data[i + 2];
            const a = data[i + 3];
            
            if (a > 128) { // ‡∏ô‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏û‡∏¥‡∏Å‡πÄ‡∏ã‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÇ‡∏õ‡∏£‡πà‡∏á‡πÉ‡∏™
                const colorKey = `${r},${g},${b}`;
                colorMap.set(colorKey, (colorMap.get(colorKey) || 0) + 1);
            }
        }
        
        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏™‡∏µ‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏µ‡πà
        this.pixelColors = Array.from(colorMap.entries())
            .sort((a, b) => b[1] - a[1])
            .slice(0, 20) // ‡πÄ‡∏Å‡πá‡∏ö 20 ‡∏™‡∏µ‡πÅ‡∏£‡∏Å
            .map(([color, count]) => {
                const [r, g, b] = color.split(',').map(Number);
                return {
                    rgb: [r, g, b],
                    hex: this.rgbToHex(r, g, b),
                    count: count
                };
            });
    }

    checkPixelAt(globalX, globalY) {
        if (!this.imageData) {
            this.showPixelInfo('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏Å‡πà‡∏≠‡∏ô');
            return;
        }

        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏™‡∏±‡∏°‡∏û‡∏±‡∏ô‡∏ò‡πå‡∏Å‡∏±‡∏ö‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
        // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏û‡∏¥‡∏Å‡∏±‡∏î (0,0) ‡∏Ç‡∏≠‡∏á global coordinate
        const imageX = globalX;
        const imageY = globalY;
        
        const width = this.canvas.width;
        const height = this.canvas.height;

        if (imageX < 0 || imageX >= width || imageY < 0 || imageY >= height) {
            this.showPixelInfo(`‚ùå ‡∏û‡∏¥‡∏Å‡∏±‡∏î‡πÄ‡∏Å‡∏¥‡∏ô‡∏Ç‡∏≠‡∏ö‡πÄ‡∏Ç‡∏ï‡∏£‡∏π‡∏õ!
üìè ‡∏Ç‡∏ô‡∏≤‡∏î‡∏£‡∏π‡∏õ: 0 ‡∏ñ‡∏∂‡∏á ${width-1} √ó 0 ‡∏ñ‡∏∂‡∏á ${height-1}
üéØ ‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏: (${globalX}, ${globalY})`);
            return;
        }

        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏ô array
        const index = (imageY * width + imageX) * 4;
        const data = this.imageData.data;
        
        const r = data[index];
        const g = data[index + 1];
        const b = data[index + 2];
        const a = data[index + 3];
        
        const hex = this.rgbToHex(r, g, b);
        const rgb = `rgb(${r}, ${g}, ${b})`;
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏µ‡πÉ‡∏ô preview
        const preview = document.getElementById('color-preview');
        preview.style.background = rgb;
        preview.style.color = this.getContrastColor(r, g, b);
        preview.innerHTML = `<div style="font-weight: bold;">${hex}</div>`;
        
        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì tile coordinates
        const tileX = Math.floor(globalX / this.TILE_SIZE);
        const tileY = Math.floor(globalY / this.TILE_SIZE);
        const pixelX = globalX % this.TILE_SIZE;
        const pixelY = globalY % this.TILE_SIZE;
        
        // ‡∏´‡∏≤‡∏™‡∏µ Wplace ‡∏ó‡∏µ‡πà‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
        const wplaceColor = this.findClosestWplaceColor(r, g, b);
        const distance = this.getColorDistance(r, g, b, wplaceColor.rgb);
        
        this.showPixelInfo(`üéØ ‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå:
‚îå‚îÄ Global: (${globalX}, ${globalY})
‚îú‚îÄ Tile: (${tileX}, ${tileY})  
‚îî‚îÄ Pixel in Tile: (${pixelX}, ${pixelY})

üé® ‡∏™‡∏µ‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö:
‚îú‚îÄ RGB: (${r}, ${g}, ${b})
‚îú‚îÄ HEX: ${hex}
‚îî‚îÄ Alpha: ${a}

üéØ ‡∏™‡∏µ Wplace ‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:
‚îú‚îÄ ‡∏ä‡∏∑‡πà‡∏≠: ${wplaceColor.name}
‚îú‚îÄ HEX: ${wplaceColor.hex}
‚îú‚îÄ RGB: (${wplaceColor.rgb.join(', ')})
‚îî‚îÄ ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á: ${distance.toFixed(1)}

${distance < 20 ? '‚úÖ ‡∏™‡∏µ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô‡∏°‡∏≤‡∏Å!' : distance < 50 ? '‚ö†Ô∏è ‡∏™‡∏µ‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏Ñ‡∏µ‡∏¢‡∏á' : '‚ùå ‡∏™‡∏µ‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏°‡∏≤‡∏Å'}`);
    }

    // ‡∏™‡∏µ Wplace ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ (‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô)
    getWplaceColors() {
        return [
            { name: 'White', hex: '#FFFFFF', rgb: [255, 255, 255] },
            { name: 'Light Gray', hex: '#E4E4E4', rgb: [228, 228, 228] },
            { name: 'Gray', hex: '#888888', rgb: [136, 136, 136] },
            { name: 'Dark Gray', hex: '#666666', rgb: [102, 102, 102] },
            { name: 'Black', hex: '#000000', rgb: [0, 0, 0] },
            { name: 'Pink', hex: '#FFA7D1', rgb: [255, 167, 209] },
            { name: 'Red', hex: '#E50000', rgb: [229, 0, 0] },
            { name: 'Dark Red', hex: '#BE0039', rgb: [190, 0, 57] },
            { name: 'Orange', hex: '#FF4500', rgb: [255, 69, 0] },
            { name: 'Brown', hex: '#A06A42', rgb: [160, 106, 66] },
            { name: 'Yellow', hex: '#FFD635', rgb: [255, 214, 53] },
            { name: 'Light Green', hex: '#00A368', rgb: [0, 163, 104] },
            { name: 'Green', hex: '#00756F', rgb: [0, 117, 111] },
            { name: 'Dark Green', hex: '#009eaa', rgb: [0, 158, 170] },
            { name: 'Cyan', hex: '#00CCC0', rgb: [0, 204, 192] },
            { name: 'Light Blue', hex: '#2450A4', rgb: [36, 80, 164] },
            { name: 'Blue', hex: '#3690EA', rgb: [54, 144, 234] },
            { name: 'Dark Blue', hex: '#51E9F4', rgb: [81, 233, 244] },
            { name: 'Purple', hex: '#811E9F', rgb: [129, 30, 159] },
            { name: 'Dark Purple', hex: '#B44AC0', rgb: [180, 74, 192] }
        ];
    }

    findClosestWplaceColor(r, g, b) {
        const colors = this.getWplaceColors();
        let minDistance = Infinity;
        let closestColor = colors[0];
        
        for (const color of colors) {
            const distance = this.getColorDistance(r, g, b, color.rgb);
            
            if (distance < minDistance) {
                minDistance = distance;
                closestColor = color;
            }
        }
        
        return closestColor;
    }

    getColorDistance(r1, g1, b1, rgb2) {
        const [r2, g2, b2] = rgb2;
        // ‡πÉ‡∏ä‡πâ Delta E algorithm ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢
        return Math.sqrt(
            Math.pow(r1 - r2, 2) * 0.3 +
            Math.pow(g1 - g2, 2) * 0.59 +
            Math.pow(b1 - b2, 2) * 0.11
        );
    }

    getContrastColor(r, g, b) {
        // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏µ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
        const brightness = (r * 299 + g * 587 + b * 114) / 1000;
        return brightness > 128 ? '#000000' : '#ffffff';
    }

    rgbToHex(r, g, b) {
        return "#" + [r, g, b].map(x => {
            const hex = x.toString(16).toUpperCase();
            return hex.length === 1 ? "0" + hex : hex;
        }).join("");
    }

    showPixelInfo(info) {
        document.getElementById('pixel-info').innerHTML = 
            `<pre style="margin: 0; white-space: pre-wrap; font-size: 11px; line-height: 1.4; color: #fff;">${info}</pre>`;
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á console commands
function createWplaceCommands() {
    window.wplace = {
        start: () => {
            if (document.getElementById('wplace-analyzer')) {
                console.log('üé® Wplace Analyzer ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß!');
                return;
            }
            new WplacePixelAnalyzer();
            console.log('üöÄ ‡πÄ‡∏õ‡∏¥‡∏î Wplace Pixel Analyzer v2.0 ‡πÅ‡∏•‡πâ‡∏ß!');
            
            // ‡πÄ‡∏Å‡πá‡∏ö reference ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö back function
            setTimeout(() => {
                const analyzer = document.getElementById('wplace-analyzer');
                if (analyzer) {
                    analyzer._analyzer = window._currentAnalyzer;
                }
            }, 100);
        },
        
        stop: () => {
            const analyzer = document.getElementById('wplace-analyzer');
            if (analyzer) {
                analyzer.remove();
                console.log('üõë ‡∏õ‡∏¥‡∏î Wplace Analyzer ‡πÅ‡∏•‡πâ‡∏ß');
            } else {
                console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Wplace Analyzer ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà');
            }
        },
        
        goto: (x, y) => {
            if (arguments.length < 2) {
                console.log('üöÄ wplace.goto(x, y) - ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î');
                console.log('‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á: wplace.goto(787, 3730)');
                return;
            }
            
            const newHash = `#${x},${y}`;
            window.location.hash = newHash;
            
            console.log(`üöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á Goto ‡πÑ‡∏õ‡∏¢‡∏±‡∏á (${x}, ${y})`);
            console.log(`üìç URL: ${window.location.origin}${newHash}`);
            
            // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì tile info
            const TILE_SIZE = 256;
            const tileX = Math.floor(x / TILE_SIZE);
            const tileY = Math.floor(y / TILE_SIZE);
            const pixelX = x % TILE_SIZE;
            const pixelY = y % TILE_SIZE;
            
            setTimeout(() => {
                console.log(`‚úÖ Goto ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!
üìç Global: (${x}, ${y})
üî≤ Tile: (${tileX}, ${tileY})
üéØ Pixel: (${pixelX}, ${pixelY})`);
            }, 1000);
            
            return { x, y, tile: { x: tileX, y: tileY }, pixel: { x: pixelX, y: pixelY } };
        },
        
        back: () => {
            const analyzer = document.getElementById('wplace-analyzer');
            if (analyzer) {
                const instance = analyzer._analyzer;
                if (instance && instance.lastPosition) {
                    window.location.hash = instance.lastPosition;
                    console.log(`üîÑ ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏î‡∏¥‡∏°: ${instance.lastPosition}`);
                    return;
                }
            }
            console.log('‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏î‡∏¥‡∏°‡πÉ‡∏´‡πâ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ');
        },
        
        coords: (x, y) => {
            if (arguments.length === 0) {
                console.log('üìç wplace.coords(x, y) - ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì tile coordinates');
                return;
            }
            
            const TILE_SIZE = 256;
            const tileX = Math.floor(x / TILE_SIZE);
            const tileY = Math.floor(y / TILE_SIZE);
            const pixelX = x % TILE_SIZE;
            const pixelY = y % TILE_SIZE;
            
            console.log(`üìç Global: (${x}, ${y})
üî≤ Tile: (${tileX}, ${tileY})
üéØ Pixel in Tile: (${pixelX}, ${pixelY})`);
            
            return {
                global: { x, y },
                tile: { x: tileX, y: tileY },
                pixel: { x: pixelX, y: pixelY }
            };
        },
        
        help: () => {
            console.log(`
üé® Wplace Pixel Analyzer v2.0 Commands:
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

wplace.start()        - ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå
wplace.stop()         - ‡∏õ‡∏¥‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠  
wplace.goto(x, y)     - ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
wplace.back()         - ‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏î‡∏¥‡∏°
wplace.coords(x, y)   - ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì tile coordinates
wplace.help()         - ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î

üÜï ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà v2.0:
‚Ä¢ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Tile-based Coordinate System
‚Ä¢ ‡πÅ‡∏õ‡∏•‡∏á Global ‚Üî Tile Coordinates ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
‚Ä¢ ‡∏î‡∏∂‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏à‡∏≤‡∏Å Wplace
‚Ä¢ üöÄ Goto ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
‚Ä¢ üîÑ Back ‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏î‡∏¥‡∏°
‚Ä¢ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏™‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏Ç‡∏∂‡πâ‡∏ô
‚Ä¢ ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ï‡∏Å‡∏ï‡πà‡∏≤‡∏á‡∏Ç‡∏≠‡∏á‡∏™‡∏µ (Color Distance)

‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ:
1. ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å wplace.start()
2. ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û template
3. ‡∏£‡∏∞‡∏ö‡∏∏ Global Coordinates (‡πÄ‡∏ä‡πà‡∏ô 787, 3730)
4. ‡∏Å‡∏î "üöÄ Goto" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ô‡∏±‡πâ‡∏ô
5. ‡∏Å‡∏î "‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏û‡∏¥‡∏Å‡πÄ‡∏ã‡∏•" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏™‡∏µ‡πÅ‡∏•‡∏∞‡∏û‡∏¥‡∏Å‡∏±‡∏î Tile
6. ‡πÉ‡∏ä‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏≤‡∏á pixel ‡∏ö‡∏ô Wplace

üí° ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö: 
‚Ä¢ wplace.goto(787, 3730) - ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ú‡πà‡∏≤‡∏ô console
‚Ä¢ wplace.back() - ‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏î‡∏¥‡∏°
‚Ä¢ "‡∏î‡∏∂‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏π‡∏≠‡∏¢‡∏π‡πà
            `);
        }
    };
}

// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö
createWplaceCommands();

// ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö
console.log(`
üé® Wplace Pixel Analyzer v2.0 ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô!
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

üÜï ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏´‡∏°‡πà:
‚úÖ ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö Tile-based Coordinates
‚úÖ ‡πÅ‡∏õ‡∏•‡∏á Global ‚Üî Tile ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥  
‚úÖ ‡∏î‡∏∂‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏à‡∏≤‡∏Å URL/DOM
‚úÖ üöÄ Goto ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
‚úÖ üîÑ Back ‡∏Å‡∏•‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÄ‡∏î‡∏¥‡∏°
‚úÖ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏™‡∏µ‡∏ó‡∏µ‡πà‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥

‡∏û‡∏¥‡∏°‡∏û‡πå wplace.help() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
‡∏´‡∏£‡∏∑‡∏≠ wplace.start() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ!

üî• ‡∏û‡∏¥‡πÄ‡∏®‡∏©: 
‚Ä¢ wplace.goto(787, 3730) - ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
‚Ä¢ wplace.coords(787, 3730) - ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì tile
`);
